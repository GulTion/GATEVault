{"path":"Revision/Que/PYQ/C/media/Pasted image 20231021132456.png","text":"[ @ t1=x + 3; // 1 addition 11 t2 =y -> f1; /7 1 dereference t3 =y -> f2; // 1 dereference @ z = tl+t2+ t3; // 2 additions for (i = @; i < 200; i += 2) { // 100 additions if (z > i) { p=p+tl; // 1 addition q=gq+t2; // 1 addition } else { p=p+ t3; // 1 addition q=gq+tl; // 1 addition } } So, in total we get 1 + 2 4 100 + 100 * 2 = 303 additions and 2 defrerences. Since all the variables ELCN T E RGN N C R CESEL W ATEVE L K LN e S (Ve oo U SR G N RN R T T G [EST ] issue (say if y was pointing to object p or g, we cannot move the sub expression out of the loop - they are no longer loop invariant. [o] i)","libVersion":"0.2.3","langs":"eng"}