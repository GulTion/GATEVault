{"path":"Revision/TS/ZealTS/FULL/media/Pasted image 20231206165543.png","text":"Answer: (a) and (c) Solution: (a) Provide mutual exclusion for the critical section, The variable ‘turn’ is either TO or T1, and if it is TO, then only thread TO can progress past ‘critical_section_enter_t0’, and vice versa. (b) It does not guarantee progress. In particular, thread TO cannot reenter the critical section after it has left it unless thread Tlentered and left the critical section in the interim. Consider: critical_section_enter_t0(); critical_section_leave_tO(); // may block even though t1 is not in the critical section critical_section_enter_t0(); critical_section_leave_t0(); (c) Provide bounded wait, since there is strict alteration of chances. (d) The solution to be starvation free, solution must satisfy both progress and bounded wait. The solution does not satisfy progress, therefore starvation can possible. Correct answer is (a) and (c)","libVersion":"0.2.3","langs":"eng"}