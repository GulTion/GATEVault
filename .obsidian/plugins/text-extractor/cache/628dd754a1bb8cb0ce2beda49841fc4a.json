{"path":"Revision/PYQ/DM/media/Pasted image 20231111174123.png","text":"S —————— 2 is the answer. 2 d(u) — d(v) = 0is possible when both u and v have an edge from from a common node ¢ and ¢ is in the shortest path from s to wand v. '~ d(u) — d(v) = 1is possible when v and another node ¢ are in the shortest path from s to u and both ¢ and v are siblings- same distance from s to both ¢ and v causing ¢ — u edge to be in BFS tree and . notv —u. d(u) — d(v) = —1is possible as explained above by interchanging u and v. d(u) — d(v) = 2is not possible. This is because on BFS traversal we either visit first or v. Let's take w first. Now, we put all neighbors of on queue. Since v is a neighbour and v is not visited before as assumed, d(v) will become d(u) + 1. Similarly, for v being visited first. B","libVersion":"0.2.3","langs":"eng"}