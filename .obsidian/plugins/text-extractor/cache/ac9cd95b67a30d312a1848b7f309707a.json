{"path":"Revision/ZealTS/DSA/media/Pasted image 20231114022258.png","text":"(9 () (:9) ) (D ) @ ®» © ) Inorder: 3 4 14 6 7 10 12 5 15 17 Notice that, while traversing inorder, the first node that violates the property of inorder, i.e. value of kth node must be less value of (k = 1) node is essentially one of the nodes that was swapped. e.g. Here 14 f 6. So, 14 is one of the nodes that were swapped; Now to find the other such node considers reverse inorder. Reverse inorder: 17 155121076 144 3 Notice that while traversing reverse inorder, the first node that violates the property of reverse inorder i.e., value of kt» node must be greater than value of (k + 1)® node is essentially the other node that was swapped. Example here 5 >12. So, 5 is another node that was swapped. # Therefore, by ‘using above 2 traversals (each of O (n) time) we can correctly identify those 2 interchanged nodes. Now talk about space complexity.","libVersion":"0.2.3","langs":"eng"}