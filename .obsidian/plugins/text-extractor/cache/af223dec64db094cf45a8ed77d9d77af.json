{"path":"Revision/MadeEasyTS/FULL/media/Pasted image 20231023131815.png","text":"Solution : (b) Iis clearly false. Why? Consider the DFA accepting the set of strings accepting the string â€˜@', over {a, b}. a b: :.,b ab Clearly L(M) = {a}. Even then, we have to put a cycle to accommodate the dead state. So this fact makes I false. And it can be easily proven that for every finite language, the DFA accepting it is always going to contain a dead state. This makes III as true. Also Il is true as it follows from the pigeonhole principle. In simple terms, if a string (lets say of length ) is of the form @44, ..... 4, is executed upon by a DFA, then the state sequence will be o7, -+ 4, (assuming q, as initial state). Clearly here, our state sequence is as long as n + 1. But our initial assumption was that we have only 1 states, which means that there must a repetition in the state sequence. And, if a state is visited more than once, then it implies we've got a cycle in our DFA. Which is what the statement II claims. Therefore I is also true. So the correct choice is (b).","libVersion":"0.2.3","langs":"eng"}