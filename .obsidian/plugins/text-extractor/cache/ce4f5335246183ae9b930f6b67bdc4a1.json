{"path":"Revision/ZealTS/OS/media/Pasted image 20231123115426.png","text":"Consider the following two process solution to critical section problem using non-atomic swap() function. Initialization: Boolean Lock = FALSE; Boolean waiting[2] = {FALSE, FALSE}; Boolean Key = FALSE; Process P: swap (boolean skey, boolean &lock){ boolean temp = *lock; *lock = *key; *key = temp; } do { key = TRUE; waiting[i] = TRUE; while (waitingl[il && key) swap (skey, &lock); <Critical Section> waiting[i] = FALSE; lock = FALSE; <Remainder Section> } while (TRUE) The above solution satisfies (a) Bounded Wait (b) Progress (Â¢) Mutual Exclusion (d) None of the above","libVersion":"0.2.3","langs":"eng"}