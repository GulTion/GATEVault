{"path":"Revision/TS/ZealTS/OS/media/Pasted image 20231210124641.png","text":"Answer: (a) Solution: (a) True; Because we execute banker’s algorithm to find safe state and Banker’s algorithm only grants resource requests that will keep the system in a “safe” state so that it will have the potential to complete without deadlock. (b) False; consider a counter example: [a[Bc[alB[c|A]B[C[A[B]C] [Po [12[1]2]2[4[00o]2[1]0]3] (pr [2fof1fali[s[ [ [ [ol1]2] (P. [2s[1[s]af1[ [ [ [1]1]1] Here Available resources 0, 0, 2 does not full fill the need of Po, P1, P2 .. Safe sequence does not exist. Hence, Banker’s algorithm not always finds an allocation of resources that avoids deadlock. (c) True; unsafe state does not guarantee dead lock Unsafe Actually, the concept is “All safe states are deadlock free, but not all unsafe lead to deadlock” (d) False; because Banker’s Algorithm needs to know how much of each resource a process could request before execution. As Banker’s algorithm is static algorithm. Therefore, it is not capable of handling threads whose maxjmum possible resource consumption for a particular resource change over time.","libVersion":"0.2.3","langs":"eng"}